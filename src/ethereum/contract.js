var Web3 = require('web3');
var web3 = new Web3(Web3.givenProvider);

var bettingContract = new web3.eth.Contract([{ "constant": true, "inputs": [], "name": "creator", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_outcomeIndex", "type": "uint256" }], "name": "placeBet", "outputs": [], "payable": true, "stateMutability": "payable", "type": "function" }, { "constant": true, "inputs": [], "name": "outcomeOne", "outputs": [{ "name": "", "type": "string" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [], "name": "eventStarted", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "totalPools", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "outcomeTwo", "outputs": [{ "name": "", "type": "string" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "outcomeThree", "outputs": [{ "name": "", "type": "string" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "bets", "outputs": [{ "name": "outcomeIndex", "type": "uint256" }, { "name": "amount", "type": "uint256" }, { "name": "paid", "type": "bool" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [], "name": "claimWinnings", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_outcomeIndex", "type": "uint256" }], "name": "eventOver", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "winningIndex", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_outcomeIndex", "type": "uint256" }], "name": "changeBet", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "name": "_outcomeOne", "type": "string" }, { "name": "_outcomeTwo", "type": "string" }, { "name": "_outcomeThree", "type": "string" }], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }]);

//For test purposes only
function deployContract() {

    var outcomeOne = "Manchester United";
    var outcomeTwo = "Draw";
    var outcomeThree = "Chelsea";

    bettingContract.options.data = '0x606060405234156200001057600080fd5b60405162000dd438038062000dd483398101604052808051820191906020018051820191906020018051820191905050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260019080519060200190620000989291906200012f565b508160029080519060200190620000b19291906200012f565b508060039080519060200190620000ca9291906200012f565b506004604051805910620000db5750595b90808252806020026020018201604052506004908051906020019062000103929190620001b6565b50600580819055506000600660006101000a81548160ff02191690831515021790555050505062000230565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200017257805160ff1916838001178555620001a3565b82800160010185558215620001a3579182015b82811115620001a257825182559160200191906001019062000185565b5b509050620001b2919062000208565b5090565b828054828255906000526020600020908101928215620001f5579160200282015b82811115620001f4578251825591602001919060010190620001d7565b5b50905062000204919062000208565b5090565b6200022d91905b80821115620002295760008160009055506001016200020f565b5090565b90565b610b9480620002406000396000f3006060604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302d05d3f146100bf57806310fe7c481461011457806329f7c1f91461012c57806330af5c56146101ba57806338367f24146101cf57806362031c461461020657806376f9bbad1461029457806389a78f1a14610322578063b401faf114610381578063c8839a1e14610396578063de75be4e146103b9578063edd7bb75146103e2575b600080fd5b34156100ca57600080fd5b6100d2610405565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61012a600480803590602001909190505061042a565b005b341561013757600080fd5b61013f61052f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017f578082015181840152602081019050610164565b50505050905090810190601f1680156101ac5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101c557600080fd5b6101cd6105cd565b005b34156101da57600080fd5b6101f06004808035906020019091905050610640565b6040518082815260200191505060405180910390f35b341561021157600080fd5b610219610664565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561025957808201518184015260208101905061023e565b50505050905090810190601f1680156102865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561029f57600080fd5b6102a7610702565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e75780820151818401526020810190506102cc565b50505050905090810190601f1680156103145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561032d57600080fd5b610359600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506107a0565b6040518084815260200183815260200182151515158152602001935050505060405180910390f35b341561038c57600080fd5b6103946107d7565b005b34156103a157600080fd5b6103b760048080359060200190919050506109b6565b005b34156103c457600080fd5b6103cc610a16565b6040518082815260200191505060405180910390f35b34156103ed57600080fd5b6104036004808035906020019091905050610a1c565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900460ff1615151561044657600080fd5b60606040519081016040528082815260200134815260200160001515815250600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050346004828154811015156104eb57fe5b906000526020600020900160008282540192505081905550346004600381548110151561051457fe5b90600052602060002090016000828254019250508190555050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105c55780601f1061059a576101008083540402835291602001916105c5565b820191906000526020600020905b8154815290600101906020018083116105a857829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561063e576001600660006101000a81548160ff0219169083151502179055505b565b60048181548110151561064f57fe5b90600052602060002090016000915090505481565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106fa5780601f106106cf576101008083540402835291602001916106fa565b820191906000526020600020905b8154815290600101906020018083116106dd57829003601f168201915b505050505081565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107985780601f1061076d57610100808354040283529160200191610798565b820191906000526020600020905b81548152906001019060200180831161077b57829003601f168201915b505050505081565b60076020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b600080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209150600554826000015414151561082f57600080fd5b60646063600460055481548110151561084457fe5b906000526020600020900154846001015481151561085e57fe5b04600460055481548110151561087057fe5b9060005260206000209001546004600381548110151561088c57fe5b9060005260206000209001540302028115156108a457fe5b048260010154019050600015158260020160009054906101000a900460ff1615151415156108d157600080fd5b60018260020160006101000a81548160ff02191690831515021790555081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201548160000155600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015156109b257600080fd5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610a1357806005819055505b50565b60055481565b6000600660009054906101000a900460ff16151515610a3a57600080fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001015460048260000154815481101515610a9357fe5b9060005260206000209001600082825403925050819055508060010154600483815481101515610abf57fe5b90600052602060002090016000828254019250508190555081816000018190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201548160000155600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff02191690831515021790555090505050505600a165627a7a723058204d7cbe928b1fbf7cd349a3aee9a9680eac5ae28f9adc38c9b21fb6342f7bc6f00029';
    web3.eth.getAccounts(function (error, accounts) {
        bettingContract.deploy({
            arguments: [outcomeOne, outcomeTwo, outcomeThree]
        })
            .send({
                from: accounts[0],
                gas: 1500000,
                gasPrice: '30000000000000'
            })
            .then(function (newContractInstance) {
                console.log(newContractInstance.options.address) // instance with the new contract address
            });
    });
}

//Note only works with constant from address currently
export default {
    placeBet: function (contractAddress, outcomeIndex, value) {
        bettingContract.options.address = contractAddress;
        web3.eth.getAccounts(function (error, accounts) {
            bettingContract.methods.placeBet(outcomeIndex).send({ from: accounts[0], value: web3.utils.toWei(value, 'ether') })
                .then(function (receipt) {
                    console.log(receipt.contractAddress);
                });
        });
    },
    changeBet: function (contractAddress, outcomeIndex) {
        bettingContract.options.address = contractAddress;
        web3.eth.getAccounts(function (error, accounts) {
            bettingContract.methods.changeBet(outcomeIndex).call({ from: accounts[0] })
                .then(function (receipt) {
                    console.log(receipt.contractAddress);
                });
        });
    },
    claimWinnings: function (contractAddress) {
        bettingContract.options.address = contractAddress;
        web3.eth.getAccounts(function (error, accounts) {
            bettingContract.methods.claimWinnings().call({ from: accounts[0] })
                .then(function (receipt) {
                    console.log(receipt.contractAddress);
                });
        });
    }
};